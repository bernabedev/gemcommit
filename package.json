{
  "name": "gemcommit",
  "displayName": "GemCommit",
  "description": "AI-powered Conventional Commit Generator using Google Gemini.",
  "version": "0.0.5",
  "author": "Freilyn Bernab√© <freilyn@bernabe.dev>",
  "publisher": "bernabe",
  "repository": {
    "type": "git",
    "url": "https://github.com/bernabedev/gemcommit"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#C80000",
    "theme": "dark"
  },
  "keywords": [
    "git",
    "commit",
    "ai",
    "gemini",
    "conventional commits"
  ],
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gemcommit.suggestCommitMessage",
        "title": "GemCommit: Generate Commit Message",
        "icon": "$(sparkle)"
      },
      {
        "command": "gemcommit.detailedCommitMessage",
        "title": "GemCommit: Generate Detailed Commit Message",
        "icon": "$(pencil)"
      },
      {
        "command": "gemcommit.showCommitHistory",
        "title": "GemCommit: Show Commit History",
        "icon": "$(history)"
      }
    ],
    "configuration": {
      "title": "GemCommit Settings",
      "properties": {
        "gemcommit.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Google Gemini AI"
        },
        "gemcommit.model": {
          "type": "string",
          "default": "gemini-1.5-flash",
          "description": "The AI model to use for generating commit messages. Example: gemini-1.5-pro"
        },
        "gemcommit.customPrompt": {
          "type": "string",
          "default": "",
          "description": "Custom prompt template for generating commit messages. Leave empty to use the default prompt."
        },
        "gemcommit.promptBeforeInsert": {
          "type": "boolean",
          "default": false,
          "description": "Show an input dialog to review and edit the generated commit message before inserting it"
        },
        "gemcommit.maxHistorySize": {
          "type": "number",
          "default": 20,
          "description": "Maximum number of commit messages to store in history"
        },
        "gemcommit.includeProjectContext": {
          "type": "boolean",
          "default": true,
          "description": "Include project context (package.json, recent commits) when generating commit messages"
        }
      }
    },
    "menus": {
      "scm/title": [
        {
          "when": "scmProvider == git",
          "command": "gemcommit.suggestCommitMessage",
          "group": "navigation",
          "icon": "$(sparkle)"
        },
        {
          "when": "scmProvider == git",
          "command": "gemcommit.detailedCommitMessage",
          "group": "navigation",
          "icon": "$(pencil)"
        },
        {
          "when": "scmProvider == git",
          "command": "gemcommit.showCommitHistory",
          "group": "navigation",
          "icon": "$(history)"
        }
      ],
      "commandPalette": [
        {
          "command": "gemcommit.suggestCommitMessage",
          "when": "scmProvider == git"
        },
        {
          "command": "gemcommit.detailedCommitMessage",
          "when": "scmProvider == git"
        },
        {
          "command": "gemcommit.showCommitHistory",
          "when": "scmProvider == git"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.19.0",
    "typescript": "^5.7.3"
  },
  "packageManager": "pnpm@10.4.1",
  "dependencies": {
    "@google/generative-ai": "^0.22.0"
  }
}